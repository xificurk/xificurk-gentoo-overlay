diff -ruN dhcp-4.1.1-P1.old/client/scripts/bsdos dhcp-4.1.1-P1/client/scripts/bsdos
--- dhcp-4.1.1-P1.old/client/scripts/bsdos	2009-04-21 16:21:09.000000000 +0200
+++ dhcp-4.1.1-P1/client/scripts/bsdos	2010-07-03 21:19:27.000000000 +0200
@@ -254,6 +254,16 @@
     exit_with_hooks 0
 fi
 
+# Fix hard-coded 64bit prefix length from dhc6.c by user supplied value
+if [ x${IP6_PREFIXLEN} != x ]; then
+  if [ x${new_ip6_prefixlen} = x64 ]; then
+    new_ip6_prefixlen=${IP6_PREFIXLEN}
+  fi
+  if [ x${old_ip6_prefixlen} = x64 ]; then
+    old_ip6_prefixlen=${IP6_PREFIXLEN}
+  fi
+fi
+
 if [ ${reason} = BOUND6 ] ; then
   if [ x${new_ip6_address} = x ] || [ x${new_ip6_prefixlen} = x ] ; then
     exit_with_hooks 2;
diff -ruN dhcp-4.1.1-P1.old/client/scripts/freebsd dhcp-4.1.1-P1/client/scripts/freebsd
--- dhcp-4.1.1-P1.old/client/scripts/freebsd	2009-04-21 16:21:09.000000000 +0200
+++ dhcp-4.1.1-P1/client/scripts/freebsd	2010-07-03 21:19:38.000000000 +0200
@@ -318,6 +318,16 @@
     exit_with_hooks 0
 fi
 
+# Fix hard-coded 64bit prefix length from dhc6.c by user supplied value
+if [ x${IP6_PREFIXLEN} != x ]; then
+  if [ x${new_ip6_prefixlen} = x64 ]; then
+    new_ip6_prefixlen=${IP6_PREFIXLEN}
+  fi
+  if [ x${old_ip6_prefixlen} = x64 ]; then
+    old_ip6_prefixlen=${IP6_PREFIXLEN}
+  fi
+fi
+
 if [ ${reason} = BOUND6 ] ; then
   if [ x${new_ip6_address} = x ] || [ x${new_ip6_prefixlen} = x ] ; then
     exit_with_hooks 2;
diff -ruN dhcp-4.1.1-P1.old/client/scripts/linux dhcp-4.1.1-P1/client/scripts/linux
--- dhcp-4.1.1-P1.old/client/scripts/linux	2009-04-21 16:21:09.000000000 +0200
+++ dhcp-4.1.1-P1/client/scripts/linux	2010-07-03 21:19:15.000000000 +0200
@@ -235,6 +235,16 @@
     exit_with_hooks 0
 fi
 
+# Fix hard-coded 64bit prefix length from dhc6.c by user supplied value
+if [ x${IP6_PREFIXLEN} != x ]; then
+  if [ x${new_ip6_prefixlen} = x64 ]; then
+    new_ip6_prefixlen=${IP6_PREFIXLEN}
+  fi
+  if [ x${old_ip6_prefixlen} = x64 ]; then
+    old_ip6_prefixlen=${IP6_PREFIXLEN}
+  fi
+fi
+
 if [ x$reason = xBOUND6 ] ; then
   if [ x${new_ip6_address} = x ] || [ x${new_ip6_prefixlen} = x ] ; then
     exit_with_hooks 2;
diff -ruN dhcp-4.1.1-P1.old/client/scripts/macos dhcp-4.1.1-P1/client/scripts/macos
--- dhcp-4.1.1-P1.old/client/scripts/macos	2008-11-04 00:32:12.000000000 +0100
+++ dhcp-4.1.1-P1/client/scripts/macos	2010-07-03 21:20:09.000000000 +0200
@@ -143,6 +143,16 @@
     exit_with_hooks 0
 fi
 
+# Fix hard-coded 64bit prefix length from dhc6.c by user supplied value
+if [ x${IP6_PREFIXLEN} != x ]; then
+  if [ x${new_ip6_prefixlen} = x64 ]; then
+    new_ip6_prefixlen=${IP6_PREFIXLEN}
+  fi
+  if [ x${old_ip6_prefixlen} = x64 ]; then
+    old_ip6_prefixlen=${IP6_PREFIXLEN}
+  fi
+fi
+
 if [ x$reason = xBOUND6 ]; then
   if [ x${new_ip6_address} = x ] || [ x${new_ip6_prefixlen} = x ]; then
     exit_with_hooks 2;
diff -ruN dhcp-4.1.1-P1.old/client/scripts/netbsd dhcp-4.1.1-P1/client/scripts/netbsd
--- dhcp-4.1.1-P1.old/client/scripts/netbsd	2009-04-21 16:21:09.000000000 +0200
+++ dhcp-4.1.1-P1/client/scripts/netbsd	2010-07-03 21:19:47.000000000 +0200
@@ -254,6 +254,16 @@
     exit_with_hooks 0
 fi
 
+# Fix hard-coded 64bit prefix length from dhc6.c by user supplied value
+if [ x${IP6_PREFIXLEN} != x ]; then
+  if [ x${new_ip6_prefixlen} = x64 ]; then
+    new_ip6_prefixlen=${IP6_PREFIXLEN}
+  fi
+  if [ x${old_ip6_prefixlen} = x64 ]; then
+    old_ip6_prefixlen=${IP6_PREFIXLEN}
+  fi
+fi
+
 if [ ${reason} = BOUND6 ] ; then
   if [ x${new_ip6_address} = x ] || [ x${new_ip6_prefixlen} = x ] ; then
     exit_with_hooks 2;
diff -ruN dhcp-4.1.1-P1.old/client/scripts/openbsd dhcp-4.1.1-P1/client/scripts/openbsd
--- dhcp-4.1.1-P1.old/client/scripts/openbsd	2008-05-23 15:56:07.000000000 +0200
+++ dhcp-4.1.1-P1/client/scripts/openbsd	2010-07-03 21:20:17.000000000 +0200
@@ -248,6 +248,16 @@
     exit_with_hooks 0
 fi
 
+# Fix hard-coded 64bit prefix length from dhc6.c by user supplied value
+if [ x${IP6_PREFIXLEN} != x ]; then
+  if [ x${new_ip6_prefixlen} = x64 ]; then
+    new_ip6_prefixlen=${IP6_PREFIXLEN}
+  fi
+  if [ x${old_ip6_prefixlen} = x64 ]; then
+    old_ip6_prefixlen=${IP6_PREFIXLEN}
+  fi
+fi
+
 if [ ${reason} = BOUND6 ] ; then
   if [ x${new_ip6_address} = x ] || [ x${new_ip6_prefixlen} = x ] ; then
     exit_with_hooks 2;
diff -ruN dhcp-4.1.1-P1.old/client/scripts/openwrt dhcp-4.1.1-P1/client/scripts/openwrt
--- dhcp-4.1.1-P1.old/client/scripts/openwrt	2009-04-21 16:21:09.000000000 +0200
+++ dhcp-4.1.1-P1/client/scripts/openwrt	2010-07-03 21:19:58.000000000 +0200
@@ -202,6 +202,16 @@
     exit_with_hooks 0
 fi
 
+# Fix hard-coded 64bit prefix length from dhc6.c by user supplied value
+if [ x${IP6_PREFIXLEN} != x ]; then
+  if [ x${new_ip6_prefixlen} = x64 ]; then
+    new_ip6_prefixlen=${IP6_PREFIXLEN}
+  fi
+  if [ x${old_ip6_prefixlen} = x64 ]; then
+    old_ip6_prefixlen=${IP6_PREFIXLEN}
+  fi
+fi
+
 if [ x$reason = xBOUND6 ]; then
   if [ x${new_ip6_address} = x ] || [ x${new_ip6_prefixlen} = x ] ; then
     exit_with_hooks 2;
