From d6ffe0f849b16151f9c8cc541dd400747c07c660 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Petr=20Mor=C3=A1vek=20=5BXificurk=5D?= <petr@pada.cz>
Date: Sun, 19 May 2013 10:06:18 +0200
Subject: [PATCH] Method for checking if IPTC tag is repeatable.

---
 gexiv2/gexiv2-metadata-iptc.cpp  | 15 +++++++++++++++
 gexiv2/gexiv2-metadata-private.h |  1 +
 gexiv2/gexiv2-metadata.cpp       | 11 +++++++++++
 gexiv2/gexiv2-metadata.h         |  8 ++++++++
 4 files changed, 35 insertions(+)

diff --git a/gexiv2/gexiv2-metadata-iptc.cpp b/gexiv2/gexiv2-metadata-iptc.cpp
index a45bf38..ed6d64b 100644
--- a/gexiv2/gexiv2-metadata-iptc.cpp
+++ b/gexiv2/gexiv2-metadata-iptc.cpp
@@ -277,6 +277,21 @@ const gchar* gexiv2_metadata_get_iptc_tag_type (const gchar* tag) {
     return NULL;
 }
 
+
+gboolean gexiv2_metadata_is_iptc_tag_repeatable (const gchar* tag) {
+    g_return_val_if_fail(tag != NULL, NULL);
+
+    try {
+        Exiv2::IptcKey key(tag);
+        return Exiv2::IptcDataSets::dataSetRepeatable(key.tag(), key.record());
+    } catch (Exiv2::Error &e) {
+        LOG_ERROR(e);
+    }
+
+    return FALSE;
+}
+
+
 GBytes* gexiv2_metadata_get_iptc_tag_raw (GExiv2Metadata *self, const gchar* tag) {
     g_return_val_if_fail(GEXIV2_IS_METADATA (self), NULL);
     g_return_val_if_fail(tag != NULL, NULL);
diff --git a/gexiv2/gexiv2-metadata-private.h b/gexiv2/gexiv2-metadata-private.h
index b0ccd7a..7e37d9a 100644
--- a/gexiv2/gexiv2-metadata-private.h
+++ b/gexiv2/gexiv2-metadata-private.h
@@ -84,6 +84,7 @@ G_GNUC_INTERNAL gboolean		gexiv2_metadata_set_iptc_tag_multiple	(GExiv2Metadata
 G_GNUC_INTERNAL const gchar*	gexiv2_metadata_get_iptc_tag_label	(const gchar* tag);
 G_GNUC_INTERNAL const gchar*	gexiv2_metadata_get_iptc_tag_description	(const gchar* tag);
 G_GNUC_INTERNAL const gchar*	gexiv2_metadata_get_iptc_tag_type	(const gchar* tag);
+G_GNUC_INTERNAL gboolean		gexiv2_metadata_is_iptc_tag_repeatable	(const gchar* tag);
 
 G_GNUC_INTERNAL GBytes*			gexiv2_metadata_get_iptc_tag_raw	(GExiv2Metadata *self, const gchar* tag);
 
diff --git a/gexiv2/gexiv2-metadata.cpp b/gexiv2/gexiv2-metadata.cpp
index 63bacaa..4d9d145 100644
--- a/gexiv2/gexiv2-metadata.cpp
+++ b/gexiv2/gexiv2-metadata.cpp
@@ -1180,6 +1180,17 @@ const gchar* gexiv2_metadata_get_tag_type (const gchar *tag) {
     return NULL;
 }
 
+
+gboolean gexiv2_metadata_is_tag_repeatable (const gchar *tag) {
+    g_return_val_if_fail(tag != NULL, NULL);
+
+    if (gexiv2_metadata_is_iptc_tag(tag))
+        return gexiv2_metadata_is_iptc_tag_repeatable(tag);
+
+    return FALSE;
+}
+
+
 GBytes* gexiv2_metadata_get_tag_raw(GExiv2Metadata *self, const gchar* tag) {
     g_return_val_if_fail(GEXIV2_IS_METADATA (self), NULL);
     g_return_val_if_fail(tag != NULL, NULL);
diff --git a/gexiv2/gexiv2-metadata.h b/gexiv2/gexiv2-metadata.h
index c005191..22ee482 100644
--- a/gexiv2/gexiv2-metadata.h
+++ b/gexiv2/gexiv2-metadata.h
@@ -414,6 +414,14 @@ const gchar*	gexiv2_metadata_get_tag_description	(const gchar *tag);
  */
 const gchar*	gexiv2_metadata_get_tag_type	(const gchar *tag);
 
+/**
+ * gexiv2_metadata_is_tag_repeatable:
+ * @tag: Name of the tag who's repeatability you want
+ *
+ * Returns: (transfer none) (allow-none): Is tag repeatable
+ */
+gboolean	gexiv2_metadata_is_tag_repeatable	(const gchar *tag);
+
 /**
  * gexiv2_metadata_get_supports_exif:
  * @self: An instance of #GExiv2Metadata
-- 
2.26.2

