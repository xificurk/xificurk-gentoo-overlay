From 735e2f8d05370eef6c8d964b9a529dea873b3e23 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Petr=20Mor=C3=A1vek?= <petr@pada.cz>
Date: Mon, 6 May 2013 15:22:43 -0700
Subject: [PATCH] Support for fetching underlying tag types: Closes #6900

Adds a new function for getting the Exiv2 tag's type.  This type
name gives the caller a clue as to how the data for a particular
tag is stored.
---
 THANKS                           |  1 +
 gexiv2.vapi                      |  1 +
 gexiv2/gexiv2-metadata-exif.cpp  | 13 +++++++++++++
 gexiv2/gexiv2-metadata-iptc.cpp  | 13 +++++++++++++
 gexiv2/gexiv2-metadata-private.h |  3 +++
 gexiv2/gexiv2-metadata-xmp.cpp   | 12 ++++++++++++
 gexiv2/gexiv2-metadata.cpp       | 15 +++++++++++++++
 gexiv2/gexiv2-metadata.h         |  8 ++++++++
 8 files changed, 66 insertions(+)

diff --git a/THANKS b/THANKS
index 8152682..025c107 100644
--- a/THANKS
+++ b/THANKS
@@ -3,6 +3,7 @@ The gexiv2 team would like to thank the following contributors:
 Robert Ancell <robert.ancell@canonical.com>
 Dan Callaghan <djc@djc.id.au>
 Luca Falavigna <dktrkranz@debian.org>
+Petr Mor√°vek <petr@pada.cz>
 Robert Park <rbpark@exolucere.ca>
 Michael Pratt <michael@prattmic.com>
 John Ralls <jralls@ceridwen.us>
diff --git a/gexiv2.vapi b/gexiv2.vapi
index ccbb810..f2023ce 100644
--- a/gexiv2.vapi
+++ b/gexiv2.vapi
@@ -62,6 +62,7 @@ namespace GExiv2 {
 		[CCode (array_length = false, array_null_terminated = true)]
 		public string[]? get_tag_multiple (string tag);
 		public string? get_tag_string (string tag);
+		public static unowned string get_tag_type (string tag);
 		public string? get_xmp_packet ();
 		[CCode (array_length = false, array_null_terminated = true)]
 		public string[] get_xmp_tags ();
diff --git a/gexiv2/gexiv2-metadata-exif.cpp b/gexiv2/gexiv2-metadata-exif.cpp
index 73b778a..3540499 100644
--- a/gexiv2/gexiv2-metadata-exif.cpp
+++ b/gexiv2/gexiv2-metadata-exif.cpp
@@ -272,4 +272,17 @@ const gchar* gexiv2_metadata_get_exif_tag_description (const gchar* tag) {
     return NULL;
 }
 
+const gchar* gexiv2_metadata_get_exif_tag_type (const gchar* tag) {
+    g_return_val_if_fail(tag != NULL, NULL);
+    
+    try {
+        Exiv2::ExifKey key(tag);
+        return Exiv2::TypeInfo::typeName(key.defaultTypeId());
+    } catch (Exiv2::Error& e) {
+        LOG_ERROR(e);
+    }
+    
+    return NULL;
+}
+
 G_END_DECLS
diff --git a/gexiv2/gexiv2-metadata-iptc.cpp b/gexiv2/gexiv2-metadata-iptc.cpp
index 908b8cc..56dbe49 100644
--- a/gexiv2/gexiv2-metadata-iptc.cpp
+++ b/gexiv2/gexiv2-metadata-iptc.cpp
@@ -262,4 +262,17 @@ const gchar* gexiv2_metadata_get_iptc_tag_description (const gchar* tag) {
     return NULL;
 }
 
+const gchar* gexiv2_metadata_get_iptc_tag_type (const gchar* tag) {
+    g_return_val_if_fail(tag != NULL, NULL);
+    
+    try {
+        Exiv2::IptcKey key (tag);
+        return Exiv2::TypeInfo::typeName(Exiv2::IptcDataSets::dataSetType(key.tag(), key.record()));
+    } catch (Exiv2::Error& e) {
+        LOG_ERROR(e);
+    }
+    
+    return NULL;
+}
+
 G_END_DECLS
diff --git a/gexiv2/gexiv2-metadata-private.h b/gexiv2/gexiv2-metadata-private.h
index c5c7763..4b08c0b 100644
--- a/gexiv2/gexiv2-metadata-private.h
+++ b/gexiv2/gexiv2-metadata-private.h
@@ -48,6 +48,7 @@ gboolean		gexiv2_metadata_set_exif_tag_long	(GExiv2Metadata *self, const gchar*
 
 const gchar*	gexiv2_metadata_get_exif_tag_label	(const gchar* tag);
 const gchar*	gexiv2_metadata_get_exif_tag_description (const gchar* tag);
+const gchar*	gexiv2_metadata_get_exif_tag_type (const gchar* tag);
 
 /* private XMP functions */
 
@@ -63,6 +64,7 @@ gboolean		gexiv2_metadata_set_xmp_tag_multiple (GExiv2Metadata *self, const gcha
 
 const gchar*	gexiv2_metadata_get_xmp_tag_label		(const gchar* tag);
 const gchar*	gexiv2_metadata_get_xmp_tag_description	(const gchar* tag);
+const gchar*	gexiv2_metadata_get_xmp_tag_type	(const gchar* tag);
 
 /* private IPTC functions */
 
@@ -76,6 +78,7 @@ gboolean		gexiv2_metadata_set_iptc_tag_multiple	(GExiv2Metadata *self, const gch
 
 const gchar*	gexiv2_metadata_get_iptc_tag_label	(const gchar* tag);
 const gchar*	gexiv2_metadata_get_iptc_tag_description	(const gchar* tag);
+const gchar*	gexiv2_metadata_get_iptc_tag_type	(const gchar* tag);
 
 
 G_END_DECLS
diff --git a/gexiv2/gexiv2-metadata-xmp.cpp b/gexiv2/gexiv2-metadata-xmp.cpp
index 3f226d5..b857ef5 100644
--- a/gexiv2/gexiv2-metadata-xmp.cpp
+++ b/gexiv2/gexiv2-metadata-xmp.cpp
@@ -300,6 +300,18 @@ const gchar* gexiv2_metadata_get_xmp_tag_description (const gchar* tag) {
     return NULL;
 }
 
+const gchar* gexiv2_metadata_get_xmp_tag_type (const gchar* tag) {
+    g_return_val_if_fail(tag != NULL, NULL);
+    
+    try {
+        return Exiv2::TypeInfo::typeName(Exiv2::XmpProperties::propertyType(Exiv2::XmpKey(tag)));
+    } catch (Exiv2::Error& e) {
+        LOG_ERROR(e);
+    }
+    
+    return NULL;
+}
+
 gboolean gexiv2_metadata_register_xmp_namespace (const gchar* name, const gchar* prefix) {
     g_return_val_if_fail(name != NULL, FALSE);
     g_return_val_if_fail(prefix != NULL, FALSE);
diff --git a/gexiv2/gexiv2-metadata.cpp b/gexiv2/gexiv2-metadata.cpp
index f085dea..fd5f094 100644
--- a/gexiv2/gexiv2-metadata.cpp
+++ b/gexiv2/gexiv2-metadata.cpp
@@ -878,4 +878,19 @@ const gchar* gexiv2_metadata_get_tag_description (const gchar *tag) {
     return NULL;
 }
 
+const gchar* gexiv2_metadata_get_tag_type (const gchar *tag) {
+    g_return_val_if_fail(tag != NULL, NULL);
+    
+    if (gexiv2_metadata_is_xmp_tag(tag))
+        return gexiv2_metadata_get_xmp_tag_type(tag);
+    
+    if (gexiv2_metadata_is_exif_tag(tag))
+        return gexiv2_metadata_get_exif_tag_type(tag);
+    
+    if (gexiv2_metadata_is_iptc_tag(tag))
+        return gexiv2_metadata_get_iptc_tag_type(tag);
+    
+    return NULL;
+}
+
 G_END_DECLS
diff --git a/gexiv2/gexiv2-metadata.h b/gexiv2/gexiv2-metadata.h
index 513929e..3144a43 100644
--- a/gexiv2/gexiv2-metadata.h
+++ b/gexiv2/gexiv2-metadata.h
@@ -206,6 +206,14 @@ const gchar*	gexiv2_metadata_get_tag_label		(const gchar *tag);
  */
 const gchar*	gexiv2_metadata_get_tag_description	(const gchar *tag);
 
+/**
+ * gexiv2_metadata_get_tag_type:
+ * @tag: Name of the tag who's type you want
+ *
+ * Returns: (transfer none) (allow-none): The tag's type
+ */
+const gchar*	gexiv2_metadata_get_tag_type	(const gchar *tag);
+
 
 /**
  * EXIF functions
-- 
1.8.1.5

