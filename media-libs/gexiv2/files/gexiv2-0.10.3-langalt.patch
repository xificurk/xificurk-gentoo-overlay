From 06da57fe090550f9f392c58819541c1d00cb8da5 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Petr=20Mor=C3=A1vek=20=5BXificurk=5D?= <petr@pada.cz>
Date: Sun, 19 May 2013 15:00:03 +0200
Subject: [PATCH] Add methods for manipulating XMP LangAlt tags.

---
 gexiv2/gexiv2-metadata-exif.cpp  |  2 +-
 gexiv2/gexiv2-metadata-private.h |  2 ++
 gexiv2/gexiv2-metadata-xmp.cpp   | 61 ++++++++++++++++++++++++++++++++++++++++
 gexiv2/gexiv2-metadata.cpp       | 23 +++++++++++++++
 gexiv2/gexiv2-metadata.h         | 16 +++++++++++
 5 files changed, 103 insertions(+), 1 deletion(-)

diff --git a/gexiv2/gexiv2-metadata-exif.cpp b/gexiv2/gexiv2-metadata-exif.cpp
index 7626768..2fb10ab 100644
--- a/gexiv2/gexiv2-metadata-exif.cpp
+++ b/gexiv2/gexiv2-metadata-exif.cpp
@@ -126,7 +126,7 @@ gchar* gexiv2_metadata_get_exif_tag_interpreted_string (GExiv2Metadata *self, co
         if (it != exif_data.end()) {
             std::ostringstream os;
             it->write (os, &exif_data);
-            
+
             return g_strdup (os.str ().c_str ());
         }
     } catch (Exiv2::Error& e) {
diff --git a/gexiv2/gexiv2-metadata-private.h b/gexiv2/gexiv2-metadata-private.h
index e534c24..005c80f 100644
--- a/gexiv2/gexiv2-metadata-private.h
+++ b/gexiv2/gexiv2-metadata-private.h
@@ -63,6 +63,8 @@ glong			gexiv2_metadata_get_xmp_tag_long	(GExiv2Metadata *self, const gchar* tag
 gboolean		gexiv2_metadata_set_xmp_tag_long	(GExiv2Metadata *self, const gchar* tag, glong value);
 gchar**			gexiv2_metadata_get_xmp_tag_multiple (GExiv2Metadata *self, const gchar* tag);
 gboolean		gexiv2_metadata_set_xmp_tag_multiple (GExiv2Metadata *self, const gchar* tag, const gchar** values);
+gchar**         gexiv2_metadata_get_xmp_tag_langalt (GExiv2Metadata *self, const gchar* tag);
+gboolean        gexiv2_metadata_set_xmp_tag_langalt (GExiv2Metadata *self, const gchar* tag, const gchar** values);
 
 const gchar*	gexiv2_metadata_get_xmp_tag_label		(const gchar* tag);
 const gchar*	gexiv2_metadata_get_xmp_tag_description	(const gchar* tag);
diff --git a/gexiv2/gexiv2-metadata-xmp.cpp b/gexiv2/gexiv2-metadata-xmp.cpp
index 0039e32..bab7f4c 100644
--- a/gexiv2/gexiv2-metadata-xmp.cpp
+++ b/gexiv2/gexiv2-metadata-xmp.cpp
@@ -316,6 +316,67 @@ gboolean gexiv2_metadata_set_xmp_tag_multiple (GExiv2Metadata *self, const gchar
     return FALSE;
 }
 
+gchar** gexiv2_metadata_get_xmp_tag_langalt (GExiv2Metadata *self, const gchar* tag) {
+    g_return_val_if_fail(GEXIV2_IS_METADATA (self), NULL);
+    g_return_val_if_fail(tag != NULL, NULL);
+    g_return_val_if_fail(self->priv->image.get() != NULL, NULL);
+    
+    Exiv2::XmpData& xmp_data = self->priv->image->xmpData();
+    
+    try {
+        Exiv2::XmpData::iterator it = xmp_data.findKey(Exiv2::XmpKey(tag));
+        
+        if (it != xmp_data.end()) {
+            int size = it->count ();
+            gchar **array = g_new (gchar*, size + 1);
+            array[size] = NULL;
+            
+            const Exiv2::LangAltValue &value = static_cast<const Exiv2::LangAltValue &>(it->value());
+            
+            int index = 0;
+            for (Exiv2::LangAltValue::ValueType::const_iterator i = value.value_.begin(); i != value.value_.end(); ++i)
+                array[index++] = g_strdup_printf("lang=\"%s\" %s", (i->first).c_str(), (i->second).c_str());
+            
+            return array;
+        }
+    } catch (Exiv2::Error& e) {
+        LOG_ERROR(e);
+    }
+    
+    gchar **array = g_new (gchar*, 1);
+    array[0] = NULL;
+    
+    return array;
+}
+
+gboolean gexiv2_metadata_set_xmp_tag_langalt (GExiv2Metadata *self, const gchar* tag, 
+    const gchar** values) {
+    g_return_val_if_fail(GEXIV2_IS_METADATA (self), FALSE);
+    g_return_val_if_fail(tag != NULL, FALSE);
+    g_return_val_if_fail(values != NULL, FALSE);
+    g_return_val_if_fail(self->priv->image.get() != NULL, FALSE);
+    
+    Exiv2::XmpData& xmp_data = self->priv->image->xmpData();
+    
+    try {
+        /* first clear existing tag */
+        gexiv2_metadata_clear_xmp_tag(self, tag);
+        
+        /* ... and then set the others */
+        const gchar **val_it = values;
+        while (*val_it != NULL) {
+            xmp_data[tag] = static_cast<const std::string> (*val_it);
+            ++val_it;
+        }
+        
+        return TRUE;
+    } catch (Exiv2::Error& e) {
+        LOG_ERROR(e);
+    }
+    
+    return FALSE;
+}
+
 const gchar* gexiv2_metadata_get_xmp_tag_label (const gchar* tag) {
     g_return_val_if_fail(tag != NULL, NULL);
     
diff --git a/gexiv2/gexiv2-metadata.cpp b/gexiv2/gexiv2-metadata.cpp
index ff94796..7d0a0b5 100644
--- a/gexiv2/gexiv2-metadata.cpp
+++ b/gexiv2/gexiv2-metadata.cpp
@@ -726,6 +726,29 @@ gboolean gexiv2_metadata_set_tag_multiple(GExiv2Metadata *self, const gchar* tag
     return FALSE;
 }
 
+gchar** gexiv2_metadata_get_tag_langalt(GExiv2Metadata *self, const gchar* tag) {
+    g_return_val_if_fail(GEXIV2_IS_METADATA(self), NULL);
+    g_return_val_if_fail(tag != NULL, NULL);
+    g_return_val_if_fail(self->priv->image.get() != NULL, NULL);
+    
+    if (gexiv2_metadata_is_xmp_tag(tag))
+        return gexiv2_metadata_get_xmp_tag_langalt(self, tag);
+    
+    return NULL;
+}
+
+gboolean gexiv2_metadata_set_tag_langalt(GExiv2Metadata *self, const gchar* tag, const gchar** values) {
+    g_return_val_if_fail(GEXIV2_IS_METADATA(self), FALSE);
+    g_return_val_if_fail(tag != NULL, FALSE);
+    g_return_val_if_fail(values != NULL, FALSE);
+    g_return_val_if_fail(self->priv->image.get() != NULL, FALSE);
+    
+    if (gexiv2_metadata_is_xmp_tag(tag))
+        return gexiv2_metadata_set_xmp_tag_langalt(self, tag, values);
+    
+    return FALSE;
+}
+
 glong gexiv2_metadata_get_tag_long(GExiv2Metadata *self, const gchar* tag) {
     g_return_val_if_fail(GEXIV2_IS_METADATA(self), 0);
     g_return_val_if_fail(tag != NULL, 0);
diff --git a/gexiv2/gexiv2-metadata.h b/gexiv2/gexiv2-metadata.h
index 251c9ab..8744106 100644
--- a/gexiv2/gexiv2-metadata.h
+++ b/gexiv2/gexiv2-metadata.h
@@ -446,6 +446,22 @@ gchar**			gexiv2_metadata_get_tag_multiple	(GExiv2Metadata *self, const gchar* t
 gboolean		gexiv2_metadata_set_tag_multiple	(GExiv2Metadata *self, const gchar* tag, const gchar** values);
 
 /**
+ * gexiv2_metadata_get_tag_langalt:
+ * @tag: The name of the tag to get
+ *
+ * Returns: (transfer full) (allow-none) (array zero-terminated=1): The langalt values of that tag
+ */
+gchar**         gexiv2_metadata_get_tag_langalt    (GExiv2Metadata *self, const gchar* tag);
+
+/**
+ * gexiv2_metadata_set_tag_langalt:
+ * @values: (array zero-terminated=1): An array of tags that you want to set
+ *
+ * Returns: (transfer full): Boolean success value
+ */
+gboolean        gexiv2_metadata_set_tag_langalt    (GExiv2Metadata *self, const gchar* tag, const gchar** values);
+
+/**
  * gexiv2_metadata_get_tag_raw:
  * @tag: Exiv2 tag name
  *
-- 
2.13.6

